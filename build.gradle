plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version + "+" + stonecutter.current.version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


repositories {
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.wispforest.io/releases/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current.version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation("com.terraformersmc:modmenu:${property("modmenu_version")}")
    annotationProcessor modImplementation("io.wispforest:owo-lib:${property("owo_version")}")
}

loom {
    accessWidenerPath = file("src/main/resources/soaring_phantoms.accesswidener")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", stonecutter.current.version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": stonecutter.current.version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
    def java = stonecutter.eval(stonecutter.current.version, ">=1.20.5")
            ? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
    targetCompatibility = java
    sourceCompatibility = java
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
